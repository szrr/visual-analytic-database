#!/usr/bin/python
"""
   Copyright (c) 2012-2013 The Ohio State University.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
"""

import sys
import os
from schema import global_table_dict as schema, process_schema_in_a_file, ColumnSchema, TableSchema

baseIndent = " " * 4

"""
Generate C style declaration of a given column.
The name of the variable is the lower cased column name.
"""

def column_to_variable(col):
    res = ""
    if col.column_type in ["INTEGER","DATE"]:
        res = "int " + col.column_name.lower() + ";"
    elif col.column_type in ["DECIMAL"]:
        res = "float " + col.column_name.lower() + ";"
    elif col.column_type in ["TEXT"]:
        res = "char " + col.column_name.lower() + "[" + str(col.column_others) + "];"

    return res

"""
Generate schema.h file from the defined table schema.
"""

def generate_schema_file():

    fo = open("schema.h","w")

    print >>fo, "/* This file is generated by schema_gen.py */"
    print >>fo, "#ifndef __SCHEMA_H__"
    print >>fo, "#define __SCHEMA_H__"
    for tn in schema.keys():
        print >>fo, "struct " + tn.lower() + " {"
        for col in schema[tn].column_list:
            print >>fo, baseIndent + column_to_variable(col)
        print >>fo, "};\n"

    print >>fo, "#endif"
    fo.close()


def schema_code_gen(argv):

    schemaFile = None
    if len(sys.argv) == 2:
        schemaFile = process_schema_in_a_file(argv[1])
    else:
        print "ERROR: usage: schema_gen.py $schema_file"
        exit(1)

    pwd = os.getcwd()
    resultDir = "./src"
    includeDir = "./include"

    os.chdir(pwd)
    os.chdir(resultDir)
    os.chdir(includeDir)

    generate_schema_file()

    os.chdir(pwd)


if __name__ == '__main__':

    schema_code_gen(sys.argv)
